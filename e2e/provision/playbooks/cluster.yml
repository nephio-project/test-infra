---
# SPDX-license-identifier: Apache-2.0
##############################################################################
# Copyright (c) 2023 The Nephio Authors.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Apache License, Version 2.0
# which accompanies this distribution, and is available at
# http://www.apache.org/licenses/LICENSE-2.0
##############################################################################

- name: Bootstrap Management cluster
  hosts: all
  vars:
    container_engine: docker
    clab:
      version: 0.42.0
      download_url: "https://github.com/srl-labs/containerlab/releases/download"
  pre_tasks:
    - name: Install kubernetes python package
      become: true
      ansible.builtin.pip:
        name: kubernetes==26.1.0
    - name: Install Docker Engine
      become: true
      when: (container_engine is not defined) or (container_engine == "docker")
      block:
        - name: Install docker binaries
          ansible.builtin.include_role:
            name: andrewrothstein.docker_engine
        - name: Grant Docker permissions to user
          ansible.builtin.user:
            name: "{{ ansible_user_id }}"
            groups: docker
            append: true
    - name: Install podman binaries
      ansible.builtin.include_role:
        name: andrewrothstein.podman
      when: container_engine == "podman"
    - name: Install KinD command-line
      ansible.builtin.include_role:
        name: andrewrothstein.kind
      vars:
        kind_config:
          sysctl:
            fs.inotify.max_user_watches: 524288
            fs.inotify.max_user_instances: 512
            kernel.keys.maxkeys: 500000
            kernel.keys.maxbytes: 1000000
    - name: Install kubectl command-line
      ansible.builtin.include_role:
        name: andrewrothstein.kubectl
    - name: Install kpt command-line
      ansible.builtin.include_role:
        name: andrewrothstein.kpt
      vars:
        kpt_ver: '1.0.0-beta.38'
        kpt_checksums:
          '1.0.0-beta.38':
            linux_amd64: sha256:e58b13b6069c70a5f0c4154aa2a548b09a9d21b9e9e7c2d935807f9943d92db4
            linux_arm64: sha256:168fd10c69e446e8e9d408a338e937b51ba4d7bd3bf986691c1e97c52a1e3d7d
            darwin_amd64: sha256:488943eca09e2a994a2a57d85729e49af241eac69bd0e3e6c1ad76507bcb6357
            darwin_arm64: sha256:8673953ad01ae806d93b5fffcaf42482ddbace7d0cd81424391b57d6c7ad6665
    - name: Download CNI plugins
      ansible.builtin.include_role:
        name: darkwizard242.cni
      vars:
        ansible_become: true
        cni_plugins_dir: /opt/cni/bin
    - name: Install container lab tool
      become: true
      when: ansible_architecture in ('arm64', 'x86_64')
      block:
        - name: Install container lab on Ubuntu family OS
          ansible.builtin.apt:
            deb: "{{ clab.download_url }}/v{{ clab.version }}/containerlab_{{ clab.version }}_linux_{{ 'amd64' if ansible_architecture == 'x86_64' else ansible_architecture }}.deb"
          when: ansible_os_family == 'Debian'
        - name: Install container lab on RedHat family OS
          ansible.builtin.yum:
            name: "{{ clab.download_url }}/v{{ clab.version }}/containerlab_{{ clab.version }}_linux_{{ 'amd64' if ansible_architecture == 'x86_64' else ansible_architecture }}.rpm"
            state: present
            disable_gpg_check: true
          when: ansible_os_family == 'RedHat'
        - name: Configure SELinux for clab
          ansible.posix.seboolean:
            name: selinuxuser_execmod
            state: true
            persistent: true
          when: ansible_os_family == 'RedHat'
  roles:
    - bootstrap
    - install
  tasks:
    - name: Deploy repositories
      ansible.builtin.include_role:
        name: kpt
      loop:
        - {pkg: repository, version: v1.0.1-beta.1, dest: /tmp/repository/mgmt}
        - {pkg: rootsync, version: v1.0.1-beta.1, dest: /tmp/rootsync/mgmt}
        - {pkg: repository, version: v1.0.1-beta.1, dest: /tmp/repository/mgmt-staging}
      vars:
        repo_uri: https://github.com/nephio-project/nephio-example-packages
        local_dest_directory: "{{ item.dest }}"
        pkg: "{{ item.pkg }}"
        version: "{{ item.version }}"
        for_deployment: true
        context: kind-kind
        kpt_async: 900
        kpt_poll: 0
    - name: Wait for packages to be applied
      ansible.builtin.async_status:
        jid: "{{ item.ansible_job_id }}"
      register: job_result
      with_items: "{{ all_kpt_apply }}"
      when: all_kpt_apply is defined
      until: job_result.finished
      retries: 90
      delay: 10
    - name: Wait for repositories
      kubernetes.core.k8s:
        context: kind-kind
        definition:
          apiVersion: config.porch.kpt.dev/v1alpha1
          kind: Repository
          metadata:
            name: "{{ item }}"
            namespace: default
        wait: true
        wait_condition:
          type: Ready
          status: true
      loop:
        - nephio-example-packages
        - mgmt
        - mgmt-staging
